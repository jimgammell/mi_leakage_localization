import numpy as np
from torch.utils.data import Subset

from utils.performance_correlation import MeasurePerformanceCorrelation

def evaluate_gmm_exploitability(profiling_dataset, attack_dataset, leakage_assessment, poi_count=20, fast=False, ret_stds=False):
    dataset_name = profiling_dataset.__class__.__name__
    if dataset_name == 'ASCADv1':
        targets = ['subbytes__r_out', 'r_out']
        if profiling_dataset.variable_keys:
            profiling_dataset = Subset(profiling_dataset, np.random.choice(len(profiling_dataset), int(0.3*len(profiling_dataset)), replace=False))
    else:
        targets = ['label']
    metric = MeasurePerformanceCorrelation(np.abs(leakage_assessment), profiling_dataset, attack_dataset, target_keys=targets)
    corr, means, stds = metric.measure_performance(poi_count=poi_count, fast=fast)
    if ret_stds:
        return corr, np.stack([means, stds])
    else:
        return corr, means